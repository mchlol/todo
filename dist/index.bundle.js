(()=>{"use strict";var t={171:(t,e,o)=>{document.querySelector("#task-list")}},e={};function o(s){var r=e[s];if(void 0!==r)return r.exports;var n=e[s]={exports:{}};return t[s](n,n.exports,o),n.exports}o.d=(t,e)=>{for(var s in e)o.o(e,s)&&!o.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{o(171);const t=document.querySelector("#add-task-form"),e=document.querySelector("#task-list");let s=[];t.addEventListener("submit",(function(t){t.preventDefault(),console.log("form submitted");const o={title:t.currentTarget.title.value,taskNotes:t.currentTarget.tasknotes.value,dueDate:t.currentTarget.dueDate.value,priority:t.currentTarget.priority.value,id:Date.now(),completed:!1};s.push(o),console.log(s),console.log(`No. of tasks in state: ${s.length}`),t.target.reset(),e.dispatchEvent(new CustomEvent("tasksUpdated"))})),e.addEventListener("tasksUpdated",(function(){console.log(s);const t=s.map((t=>`\n        <li>\n        ${t.title}\n        </li>\n        `));e.innerHTML=t})),e.addEventListener("tasksUpdated",(function(){console.log("task saved to localStorage"),localStorage.setItem("tasks",JSON.stringify(s)),console.log(localStorage.getItem("tasks"))})),function(){console.log("retrieving tasks from local storage...");const t=JSON.parse(localStorage.getItem("tasks"));t.length&&(s=t,e.dispatchEvent(new CustomEvent("tasksUpdated")))}()})()})();
//# sourceMappingURL=index.bundle.js.map