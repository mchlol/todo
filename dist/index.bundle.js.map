{"version":3,"file":"index.bundle.js","mappings":"mBAOA,MAAMA,EAAgBC,IAClB,MAAMC,EAAQ,IAAIC,KACZC,EAAcF,EAAMG,eAEpBC,EADY,IAAIH,KAAKF,GACEI,eAE7B,OAAID,IAAgBE,EACT,QAEFH,KAAKI,MAAMN,GAAQC,EAEjB,UAEDC,KAAKI,MAAMN,GAGZK,EACE,YADN,EAFM,SAIX,EAKJE,QAAQC,IAAI,UAAYT,EAAa,eACrCQ,QAAQC,IAAI,cAAgBT,EAAa,eACzCQ,QAAQC,IAAI,aAAeT,KAC3BQ,QAAQC,IAAI,WAAaT,EAAa,eACtCQ,QAAQC,IAAI,SAAWT,EAAa,OACpCQ,QAAQC,IAAI,cAAgBT,OAAaU,IACzCF,QAAQC,IAAI,kBAAoBT,EAAa,cAC7CQ,QAAQC,IAAI,MAAWT,EAAa,IACpCQ,QAAQC,IAAI,gBAAkBT,EAAa,kBAiB3C,IAEIW,EAAW,IAAIR,KAInB,MAAMS,EAAW,IAjBjB,MACIC,YAAYC,EAAMC,EAAYC,EAAUC,EAAQC,GAC5CC,KAAKL,MAAQA,EACbK,KAAKJ,YAAcA,EACnBI,KAAKH,UAAYA,EAAUX,eAC3Bc,KAAKF,QAAUA,EAAQZ,eACvBc,KAAKD,SAAWA,CACpB,GAIY,qDACD,iEAK8BP,EAASA,EAAS,gBAE/DH,QAAQC,IAAIG,GAMZ,MAAMQ,EAAWC,SAASC,cAAc,eAExC,SAAyBC,GAErB,IAAIC,EAAWH,SAASI,cAAc,MACtCD,EAASE,UAAUC,IAAI,kBAAmB,oBAAqB,MAAO,OAGtE,IAAIC,EAAkBP,SAASI,cAAc,OAC7CG,EAAgBF,UAAUC,IAAI,qBAI9B,IAAIE,EAAQR,SAASI,cAAc,SACnCI,EAAMC,KAAO,WACbD,EAAMH,UAAUC,IAAI,mBAAoB,OAGxC,IAAIb,EAAQO,SAASI,cAAc,QACnCX,EAAMY,UAAUC,IAAI,UAAW,OAC/Bb,EAAMiB,YAAcR,EAAOT,MAG3Bc,EAAgBI,YAAYH,EAAMf,GAIVO,SAASI,cAAc,OAC7BC,UAAUC,IAAI,uBAShCH,EAASQ,YAAYJ,GAGdR,EAASY,YAAYR,EAChC,CAEAS,CAAgBrB,E","sources":["webpack://todo/./src/index.js"],"sourcesContent":["import printMe from './print.js';\nimport './input.scss';\n\n\n\n// check task category\n\nconst checkDueDate = (date) => {\n    const today = new Date();\n    const todayString = today.toDateString();\n    const dateInput = new Date(date);\n    const dateString = dateInput.toDateString();\n\n    if (todayString === dateString) {\n        return `Today`;\n    } \n    else if (Date.parse(date) < today) {\n        // task == completed ? 'completed' : 'today, overdue warning'\n        return `Overdue`;\n    } \n    else if (!Date.parse(date)) {\n        return `Someday`;\n    } \n    else if (dateString) {\n        return `Soon`;\n    }\n};\n\n// test the function for various cases\n// note to self - learn testing\nconsole.log('Today: ' + checkDueDate('2022-10-26'));\nconsole.log('Yesterday: ' + checkDueDate('2021-10-26'));\nconsole.log('No input: ' + checkDueDate());\nconsole.log('Future: ' + checkDueDate('2022-10-28'));\nconsole.log('null: ' + checkDueDate(null));\nconsole.log('undefined: ' + checkDueDate(undefined));\nconsole.log('random string: ' + checkDueDate('ahlfkahef'));\nconsole.log(2 + ': ' + checkDueDate(2)); // this returns 'overdue' as 2 is less than a date \nconsole.log('Huge number: ' + checkDueDate(999999999999999));\n\n\n\n// task class\n\nclass Task {\n    constructor(title,description,dateAdded,dueDate,priority) {\n        this.title = title;\n        this.description = description;\n        this.dateAdded = dateAdded.toDateString();\n        this.dueDate = dueDate.toDateString();\n        this.priority = priority;\n    }\n}\n\n// temp args\nlet someTitle = 'Lorem ipsum dolor sit amet, consectetuer adipiscin';\nlet someDesc = 'make list, buy adaptor, find winter clothes, replace batteries';\nlet someDate = new Date();\nlet somePrio = 'Low';\n\n// temp task object\nconst someTask = new Task(someTitle,someDesc,someDate,someDate,`${somePrio} priority`);\n\nconsole.log(someTask);\n\n/* ###\n    DOM STUFF\n### */\n\nconst taskList = document.querySelector('#task-list');\n\nfunction displayTaskItem(object) {\n    // create list item\n    let listItem = document.createElement('li');\n    listItem.classList.add('list-group-item', 'task-item-wrapper', 'm-1', 'p-1')\n\n    // create primary text wrap\n    let taskPrimaryText = document.createElement('div');\n    taskPrimaryText.classList.add('task-text-primary')\n\n    // primary text elements\n    // checkbox\n    let check = document.createElement('input');\n    check.type = 'checkbox';\n    check.classList.add('form-check-input', 'm-1')\n    \n    // title\n    let title = document.createElement('span');\n    title.classList.add('fw-bold', 'm-1')\n    title.textContent = object.title;\n\n    // append primary text elements\n    taskPrimaryText.appendChild(check,title);\n\n\n    // create secondary text wrap\n    let taskSecondaryWrap = document.createElement('div');\n    taskSecondaryWrap.classList.add('task-text-secondary');\n\n    //secondary text elements\n    // date added - don't need to display this for now\n\n    // due date\n    \n\n    \n    listItem.appendChild(taskPrimaryText);\n\n    // return list item\n    return taskList.appendChild(listItem);\n}\n\ndisplayTaskItem(someTask);\n\n/*\ndefault view is today\nuser can change view to soon, someday, or completed\nuser clicks button to add task\nmodal window opens\nuser inputs info into the form\non submit the form data is stored as an object\ntask objects are kept in localstorage\nuser can categorise tasks\nif dueDate is today it goes into today tasklist\nif dueDate exists but is not today it goes into soon tasklist\nif no dueDate exists it goes into someday tasklist\nuser can edit all task info\nuser can delete a task\nuser can 'check' off a task\n  when checked a task is moved eg from 'today' to 'completed'\nwhen task is added it appears in the list\nordered by priority, then date added\n*/\n\n"],"names":["checkDueDate","date","today","Date","todayString","toDateString","dateString","parse","console","log","undefined","someDate","someTask","constructor","title","description","dateAdded","dueDate","priority","this","taskList","document","querySelector","object","listItem","createElement","classList","add","taskPrimaryText","check","type","textContent","appendChild","displayTaskItem"],"sourceRoot":""}