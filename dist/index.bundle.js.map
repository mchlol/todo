{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://todo/./src/dom.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/./src/index.js"],"sourcesContent":["const taskList = document.querySelector('#task-list');\n\nfunction createLiElement(task) {\n\n    let listItem = document.createElement('li');\n    listItem.classList.add('list-group-item', 'task-item-wrapper', 'p-1')\n    listItem.setAttribute('id', task.id);\n\n    let taskPrimaryWrap = document.createElement('div');\n    taskPrimaryWrap.classList.add('task-text-primary')\n\n    let check = document.createElement('input');\n    check.type = 'checkbox';\n    check.classList.add('form-check-input', 'm-1')\n    \n    let title = document.createElement('span');\n    title.classList.add('fw-bold', 'm-1')\n    title.textContent = task.title;\n\n    let taskSecondaryWrap = document.createElement('div');\n    taskSecondaryWrap.classList.add('task-text-secondary', 'text-muted', 'small');\n\n    let notes = document.createElement('p');\n    notes.classList.add('m-1','text-justify');\n    notes.textContent = task.taskNotes;\n\n    let detailsRow = document.createElement('div');\n    detailsRow.classList.add('d-flex', 'flex-wrap','justify-content-between','align-items-center');\n\n    let dueDate = document.createElement('span');\n    dueDate.classList.add('small','m-1');\n    if (!task.dueDate) {\n        dueDate.textContent = 'No due date';\n    }  else dueDate.textContent = `Due ${task.dueDate}`;\n\n    let priority = document.createElement('span');\n    priority.classList.add('small','m-1');\n    priority.textContent = task.priority + ' priority';\n\n    let iconWrap = document.createElement('div');\n    iconWrap.classList.add('d-flex');\n\n    let editBtn = document.createElement('button');\n    editBtn.classList.add('btn','btn-sm');\n    editBtn.setAttribute('id','edit');\n    editBtn.innerHTML = `<span class=\"material-icons text-primary\">mode</span>`;\n\n    let delBtn = document.createElement('button');\n    delBtn.classList.add('btn','btn-sm');\n    delBtn.setAttribute('id','delete');\n    delBtn.innerHTML = `<span class=\"material-icons text-danger\">delete</span>`;\n    // delBtn.addEventListener('click', deleteItem);\n\n    // append the elements\n    iconWrap.appendChild(editBtn);\n    iconWrap.appendChild(delBtn);\n\n    detailsRow.appendChild(dueDate);\n    detailsRow.appendChild(priority)\n    detailsRow.appendChild(iconWrap);\n\n    taskSecondaryWrap.appendChild(notes);\n    taskSecondaryWrap.appendChild(detailsRow);\n\n    taskPrimaryWrap.appendChild(check)\n    taskPrimaryWrap.appendChild(title);\n    \n    listItem.appendChild(taskPrimaryWrap);\n    listItem.appendChild(taskSecondaryWrap);\n\n    return taskList.appendChild(listItem);\n}\n\n// from shopping list:\n// function deleteItem(btn) {\n//     let element = btn.target.parentNode;\n//     const index = [...element.parentElement.children].indexOf(element);\n//     itemStorage.splice(index, 1);\n//     localStorage.setItem('items', JSON.stringify(itemStorage));\n//     element.remove();\n//   };\n\n\nexport {\n    createLiElement\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// import the modules first\nimport { createLiElement } from './dom.js';\nimport './input.scss';\n\n// access form \n// access form inputs by their name eg. form.notes.value\nconst form = document.querySelector('#add-task-form');\n\n// access ul for displaying tasks\nconst list = document.querySelector('#task-list');\n\n// create an array to hold task objects\nlet tasks = [];\n\nfunction handleSubmit(event) {\n    event.preventDefault(); // stop the 'page refresh with data in the url' behaviour\n    console.log('form submitted');\n\n    // create the task in an object\n    // first get the data from the form inputs\n    const title = event.currentTarget.title.value;\n    const taskNotes = event.currentTarget.tasknotes.value;\n    const dueDate = event.currentTarget.dueDate.value;\n    const priority = event.currentTarget.priority.value;\n    // create the task object from above data\n    const task = {\n        title,\n        taskNotes,\n        dueDate,\n        priority,\n        id: Date.now(),\n        completed: false,\n        // havent added category yet\n    };\n    // add the new object to the array\n    tasks.push(task); \n    console.log(tasks);\n    console.log(`No. of tasks in state: ${tasks.length}`);\n    // clear the form inputs\n    event.target.reset();\n    // dispatch a custom event to the list element to say the tasks array state has changed\n    list.dispatchEvent(new CustomEvent('tasksUpdated'));\n}\n\n\nfunction displayTasks() {\n    console.log(tasks);\n    list.innerHTML = '';\n    const html = tasks.forEach(\n        task => createLiElement(task)\n    );\n}\n\nfunction mirrorToLocalStorage() {\n    console.log('task saved to localStorage');\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\nfunction restoreFromLocalStorage() {\n    console.log('retrieving tasks from local storage...');\n    const localStorageTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (localStorageTasks) { \n        tasks = localStorageTasks;\n        list.dispatchEvent(new CustomEvent('tasksUpdated'));\n    } else {\n        console.log('no tasks in localStorage yet')\n    }\n}\n\nfunction deleteTask(id) {\n    console.log('deleting task', id);\n    // filter the tasks to leave only those that do NOT match the id\n    console.log(tasks.filter(task => task.id !== id));\n    // log the new array\n    console.log(tasks);\n    // let the list know the tasks updated & re render the list\n    list.dispatchEvent(new CustomEvent('tasksUpdated'));\n}\n\nfunction markComplete(id) {\n    console.log(`changed task ${id} complete status`);\n    const taskRef = tasks.find(task => task.id === id);\n    taskRef.completed = !taskRef.completed;\n    console.log(taskRef);\n    list.dispatchEvent(new CustomEvent('tasksUpdated'));\n};\n\n\nform.addEventListener('submit', handleSubmit);\nlist.addEventListener('tasksUpdated', displayTasks);\n\n// anonymous function so we can pass an argument\nlist.addEventListener(\"tasksUpdated\", () => { mirrorToLocalStorage(tasks) });\n\nlist.addEventListener('click', function(event) {\n    const id = event.target.closest('li').id;\n    console.log('id: ', id);\n    if (event.target.matches('span')) {\n        if (event.target.closest('button')) {\n            deleteTask(id);\n        }\n    } else if (event.target.matches('input[type=checkbox]')) {\n        markComplete(id);\n    }\n});\n\nrestoreFromLocalStorage(tasks);\n\n\n// ## modules? ## //\n\n// check task due date\n// this could go in a module\nconst checkDueDate = (date) => {\n    const today = new Date();\n    const todayString = today.toDateString();\n    const dateInput = new Date(date);\n    const dateString = dateInput.toDateString();\n\n    if (todayString === dateString) {\n        return `Today`;\n    } \n    else if (Date.parse(date) < today) {\n        // task == completed ? 'completed' : 'today, overdue warning'\n        return `Overdue`;\n    } \n    else if (!Date.parse(date)) {\n        return `Someday`;\n    } \n    else if (dateString) {\n        return `Soon`;\n    }\n};\n\n\n// convert date to human readable format\n// could be a module\nconst dateHandler = (date) => {\n    let dayOfWeek = date.getDay();\n    let dayOfMonth = date.getDate();\n    let month = date.getMonth();\n    let year = date.getYear();\n    let string = `${dayOfWeek} ${dayOfMonth} ${month} ${year}`;\n    return string;\n}\n\n    // task class\n    // could creating a task also be a module?\n    // class Task {\n    //     constructor(title,notes,dueDate,priority,category) {\n    //     this.title = title;\n    //     this.notes = notes;\n    //     this.dueDate = dueDate;\n    //     this.priority = priority;\n    //     this.taskId = Date.now();\n    //     this.section = checkDueDate(dueDate); // check name if module\n    //     this.category = category; // ie 'tasks' or 'projectName'\n    //     }\n    // };\n\n/*\ndefault view is today\nuser can change view to soon, someday, or completed\nuser clicks button to add task\nmodal window opens\nuser inputs info into the form\non submit the form data is stored as an object\ntask objects are kept in localstorage\nuser can categorise tasks\nif dueDate is today it goes into today tasklist\nif dueDate exists but is not today it goes into soon tasklist\nif no dueDate exists it goes into someday tasklist\nuser can edit all task info\nuser can delete a task\nuser can 'check' off a task\n  when checked a task is moved eg from 'today' to 'completed'\nwhen task is added it appears in the list\nordered by priority, then date added\n*/\n"],"names":["taskList","document","querySelector","createLiElement","task","listItem","createElement","classList","add","setAttribute","id","taskPrimaryWrap","check","type","title","textContent","taskSecondaryWrap","notes","taskNotes","detailsRow","dueDate","priority","iconWrap","editBtn","innerHTML","delBtn","appendChild","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","form","list","tasks","addEventListener","event","preventDefault","console","log","currentTarget","value","tasknotes","Date","now","completed","push","length","target","reset","dispatchEvent","CustomEvent","forEach","localStorage","setItem","JSON","stringify","closest","matches","filter","deleteTask","taskRef","find","markComplete","localStorageTasks","parse","getItem","restoreFromLocalStorage"],"sourceRoot":""}