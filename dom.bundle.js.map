{"version":3,"file":"dom.bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,kCAAkC,aAAa;;AAEtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/dom.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const taskList = document.querySelector('#task-list');\n\nfunction createLiElement(task) {\n    // create the elements and add class names and attributes where required\n    let listItem = document.createElement('li');\n    listItem.classList.add('list-group-item', 'task-item-wrapper', 'p-1')\n    listItem.setAttribute('id', task.id);\n\n    let taskPrimaryWrap = document.createElement('div');\n    taskPrimaryWrap.classList.add('task-text-primary')\n\n    let check = document.createElement('input');\n    check.type = 'checkbox';\n    check.classList.add('form-check-input', 'm-1')\n    \n    let title = document.createElement('span');\n    title.classList.add('fw-bold', 'm-1')\n    title.textContent = task.title;\n\n    let taskSecondaryWrap = document.createElement('div');\n    taskSecondaryWrap.classList.add('task-text-secondary', 'text-muted', 'small');\n\n    let notes = document.createElement('p');\n    notes.classList.add('m-1','text-justify');\n    notes.textContent = task.taskNotes;\n\n    let detailsRow = document.createElement('div');\n    detailsRow.classList.add('d-flex', 'flex-wrap','justify-content-between','align-items-center');\n\n    let dueDate = document.createElement('span');\n    dueDate.classList.add('small','m-1');\n    if (!task.dueDate) {\n        dueDate.textContent = 'No due date';\n    }  else dueDate.textContent = `Due ${task.dueDate}`;\n\n    let priority = document.createElement('span');\n    priority.classList.add('small','m-1');\n    priority.textContent = task.priority + ' priority';\n\n    let iconWrap = document.createElement('div');\n    iconWrap.classList.add('d-flex');\n\n    let editBtn = document.createElement('button');\n    editBtn.classList.add('btn','btn-sm');\n    editBtn.setAttribute('id','edit');\n    editBtn.innerHTML = `<span class=\"material-icons text-primary\">mode</span>`;\n\n    let delBtn = document.createElement('button');\n    delBtn.classList.add('btn','btn-sm');\n    delBtn.setAttribute('id','delete');\n    delBtn.innerHTML = `<span class=\"material-icons text-danger\">delete</span>`;\n\n    // append the elements\n    iconWrap.appendChild(editBtn);\n    iconWrap.appendChild(delBtn);\n\n    detailsRow.appendChild(dueDate);\n    detailsRow.appendChild(priority)\n    detailsRow.appendChild(iconWrap);\n\n    taskSecondaryWrap.appendChild(notes);\n    taskSecondaryWrap.appendChild(detailsRow);\n\n    taskPrimaryWrap.appendChild(check)\n    taskPrimaryWrap.appendChild(title);\n    \n    listItem.appendChild(taskPrimaryWrap);\n    listItem.appendChild(taskSecondaryWrap);\n\n    // return the final li element appended to the ul element?\n    return taskList.appendChild(listItem);\n}\n\nfunction noTasks() {\n    let div = document.createElement('div');\n    div.textContent = \"No tasks yet!\";\n    return taskList.appendChild(div);\n}\n\nexport {\n    createLiElement,\n    noTasks,\n};"],"names":[],"sourceRoot":""}